[supervisord]
logfile=/var/log/brocapi/supervisord.log  ; (main log file;default $CWD/supervisord.log)
logfile_maxbytes=50MB       ; (max main logfile bytes b4 rotation;default 50MB)
logfile_backups=10          ; (num of main logfile rotation backups;default 10)
loglevel=info               ; (log level;default info; others: debug,warn,trace)
pidfile=/var/run/brocapi/supervisord.pid ; (supervisord pidfile;default supervisord.pid)
nodaemon=true              ; (start in foreground if true;default false)
minfds=1024                 ; (min. avail startup file descriptors;default 1024)
minprocs=200                ; (min. avail process descriptors;default 200)
;umask=022                  ; (process file creation umask;default 022)
user=bro                 ; (default is current user, required if root)
;;identifier=supervisor       ; (supervisord identifier, default is 'supervisor')
;;directory=/tmp              ; (default is not to cd during start)
;;nocleanup=true              ; (don't clean up tempfiles at start;default false)
;;childlogdir=/tmp            ; ('AUTO' child log dir, default $TEMP)
;;environment=KEY=value       ; (key value pairs to add to environment)
;;strip_ansi=false            ; (strip ansi escape codes in logs; def. false)
;
[program:brocapi_worker]
; Point the command to the specific rq command you want to run.
; If you use virtualenv, be sure to point it to
; /path/to/virtualenv/bin/rq
; Also, you probably want to include a settings module to configure this
; worker.  For more info on that, see http://python-rq.org/docs/workers/
command=/usr/bin/rq worker
process_name=%(program_name)s_%(process_num)02d
stdout_logfile = /var/log/brocapi/brocapi_worker.log
stderr_logfile = /var/log/brocapi/brocapi_worker.log

; If you want to run more than one worker instance, increase this
numprocs=4
user=bro

; This is the directory from which RQ is ran. Be sure to point this to the
; directory where your source code is importable from
directory=/opt/brocapi/brocapi

; RQ requires the TERM signal to perform a warm shutdown. If RQ does not die
; within 10 seconds, supervisor will forcefully kill it
stopsignal=TERM

; These are up to you
autostart=true
autorestart=true